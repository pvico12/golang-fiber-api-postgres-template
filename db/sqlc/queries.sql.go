// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package db

import (
	"context"
)

const createDefaultUsers = `-- name: CreateDefaultUsers :exec
INSERT INTO users (name, age)
VALUES 
    ('Alice', 30),
    ('Bob', 25),
    ('Charlie', 35),
    ('Diana', 28),
    ('Eve', 22)
`

func (q *Queries) CreateDefaultUsers(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createDefaultUsers)
	return err
}

const listUsers = `-- name: ListUsers :many
SELECT name, age
FROM users
ORDER BY name
`

type ListUsersRow struct {
	Name string
	Age  int32
}

func (q *Queries) ListUsers(ctx context.Context) ([]ListUsersRow, error) {
	rows, err := q.db.QueryContext(ctx, listUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListUsersRow
	for rows.Next() {
		var i ListUsersRow
		if err := rows.Scan(&i.Name, &i.Age); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
